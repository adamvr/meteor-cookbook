)]}'
{"version":3,"file":"/packages/pierreeric:cssc.js","sources":["pierreeric:cssc/cssc.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAOO;AAEL;;;;;;EAKA,IAAC,GAAD,GAAK,SAAC,GAAD;WAAS,KAAE,GAAF,GAAO,IAAhB;GALL;;AAOA;;;;;KAPA;;EAYA,IAAC,GAAD,GAAK,SAAC,GAAD;WAAS,KAAE,GAAF,GAAO,KAAhB;GAZL;;AAcA;;;;;KAdA;;EAmBA,IAAC,GAAD,GAAK,SAAC,GAAD;WAAS,KAAE,GAAF,GAAO,KAAhB;GAnBL;;AAqBA;;;;KArBA;;AAyBa;AACX;YAAQ,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAR;IACA,KAAK,CAAC,YAAN,CAAmB,OAAnB,EAA4B,QAA5B,CADA;IAGA,KAAK,CAAC,WAAN,CAAkB,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAlB,CAHA;IAIA,QAAQ,CAAC,IAAI,CAAC,WAAd,CAA0B,KAA1B,CAJA;IAKA,IAAC,MAAD,GAAS,KAAK,CAAC,KALf,CADW;GAzBb;;AAiCA;;;;;;KAjCA;;iBAuCA,MAAK,SAAC,IAAD,EAAO,UAAP;AACH;QAAiB,gBAAe,QAAhC;aAAO,CAAC,IAAD,CAAP;;AACA;;AACE,YAAM,IAAC,MAAK,CAAC,UAAP,CAAkB,KAAE,GAAF,GAAO,KAAzB,EAA+B,IAAC,MAAK,CAAC,QAAQ,CAAC,MAA/C,CAAN;MACA,OAAO,IAAC,MAAK,CAAC,QAAS,KADvB;AAEA;;YAAI,CAAC,KAAM,KAAX,GAAkB,GAAlB;OAHF;KADA;WAKA,KANG;GAvCL;;;;IATF;A","sourcesContent":["###\nCSSC: CoffeeScript's StyleSheet.\n@example\n  stylesheet = new CSSC\n  CSSC.add 'html',\n    backgroundColor: 'red'\n###\nclass @CSSC\n\n  ###\n  Static method for creating percentage strings.\n  @param  {Number} val Value set in the string.\n  @return {String}     Stringified value with percentage.\n  ###\n  @pc: (val) -> \"#{val}%\"\n\n  ###\n  Static method for creating pixel strings.\n  @param  {Number} val Value set in the string.\n  @return {string}     Stringified value with pixel.\n  ###\n  @px: (val) -> \"#{val}px\"\n\n  ###\n  Static method for creating em strings.\n  @param  {Number} val Value set in the string.\n  @return {string}     Stringified value with em.\n  ###\n  @em: (val) -> \"#{val}em\"\n\n  ###\n  C-tor creating a StyleSheet.\n  @return {CSSC} The GhostTag's StyleSheet.\n  ###\n  constructor: ->\n    style = document.createElement 'style'\n    style.setAttribute 'media', 'screen'\n    # Hack for WebKit\n    style.appendChild document.createTextNode ''\n    document.head.appendChild style\n    @sheet = style.sheet\n\n  ###\n  Add a CSSRule to the current StyleSheet.\n  @param {String} or {Array} tags A single tag / class or and Array of srings.\n  @param {Object} properties A dictionnay of CSS's properties.\n  @return {CSSC} The GhostTag's StyleSheet, allowing chaining.\n  ###\n  add: (tags, properties) ->\n    tags = [tags] if typeof tags is 'string'\n    for tag in tags\n      idx = @sheet.insertRule \"#{tag} {}\", @sheet.cssRules.length\n      rule = @sheet.cssRules[idx]\n      rule.style[key] = val for key, val of properties\n    @\n"]}